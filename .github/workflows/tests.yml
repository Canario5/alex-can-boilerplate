name: Test Pipeline

on:
  workflow_call:

jobs:
  test-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run Unit tests
        run: npm run test:unit

      - name: Run Component tests
        run: npm run test:component

      - name: Run Integration tests
        run: npm run test:integration

  build-image:
    needs: test-all
    uses: ./.github/workflows/build-image.yml

  e2e:
    runs-on: ubuntu-latest
    needs: [build-image, test-all]
    permissions:
      packages: read
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker image
        run: docker pull ${{ needs.build-image.outputs.image-tag }}

      - name: Start production service using built image
        run: |
          docker run -d -p 8080:8080 --name prod-app ${{ needs.build-image.outputs.image-tag }}
          timeout 60s sh -c 'until curl -s http://localhost:8080 >/dev/null; do sleep 2; done'

      - name: Install Playwright runtime only
        run: npm install --no-save @playwright/test

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Publish E2E Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: 'E2E Test Results'
          path: './tests/e2e/results.xml'
          reporter: 'java-junit'
          fail-on-error: false

      - name: Stop container
        if: always()
        run: docker stop prod-app || true && docker rm prod-app || true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            tests/e2e/playwright-report/
            tests/e2e/results.xml
          retention-days: 7
