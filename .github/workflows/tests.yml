name: Test Pipeline

on:
  workflow_call:
    inputs:
      run-unit:
        type: boolean
        default: true
      run-component:
        type: boolean
        default: true
      run-integration:
        type: boolean
        default: true
  workflow_dispatch:
    inputs:
      run-unit:
        description: 'Run unit tests?'
        type: boolean
        default: true
      run-component:
        description: 'Run component tests?'
        type: boolean
        default: true
      run-integration:
        description: 'Run integration tests?'
        type: boolean
        default: true

jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write  #? For node caching
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: '24'

      - name: Cache Playwright browsers
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ~/.cache/ms-playwright #? Where Ubuntu runner stores downloaded browsers
          key: ${{ runner.os }}-playwright-${{ hashFiles('pnpm-lock.yaml') }} #? Name of this cache "os-playwright-<hash of the pnpm-lock.yaml>"
          restore-keys: ${{ runner.os }}-playwright- #? Playwright is smart and can use incremental updates with older cache

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run Unit tests
        if: inputs.run-unit
        run: pnpm run test:unit:coverage

      - name: Run Component tests
        if: inputs.run-component
        run: pnpm run test:component:coverage

      - name: Run Integration tests
        if: inputs.run-integration
        run: pnpm run test:integration:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          flags: tests
          name: test-coverage
          fail_ci_if_error: false

