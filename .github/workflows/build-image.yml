name: Build Production Image

on:
  workflow_call:
    outputs:
      image-tag:
        description: "Built image tag"
        value: ${{ jobs.build.outputs.image-tag }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.export.outputs.image-tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      # 1️⃣ Create normalised (lower-case) tags & OCI labels
      - name: Generate Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/alex-can-boilerplate-prod
          tags: |
            type=sha,format=long
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      # 2️⃣ Authenticate to the registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3️⃣ Enables Buildx features (GHA cache import/export) used by the next step.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4️⃣ Build & push the production stage
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: prod
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 5️⃣ Export the first tag for downstream jobs
      - name: Export image tag
        id: export
        shell: bash
        run: |
          IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          echo "image-tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
