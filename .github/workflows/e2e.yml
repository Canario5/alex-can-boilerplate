name: E2E Tests

on:
  workflow_call:
    inputs:
      image-tag:
        description: "Pre-built image tag for E2E tests"
        type: string
        required: true
      run-e2e:
        type: boolean
        default: true

jobs:
  e2e:
    if: inputs.run-e2e
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      packages: read
      checks: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker image
        run: |
          echo "Using image: ${{ inputs.image-tag }}"
          docker pull ${{ inputs.image-tag }}

      - name: Start production service
        run: docker run -d -p 8080:8080 --name prod-app ${{ inputs.image-tag }}

      - name: Wait for service to be ready
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 1
          max_attempts: 30
          retry_wait_seconds: 2
          command: curl -f http://localhost:8080 || exit 1

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: '24'

      - name: Cache Playwright browsers
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ~/.cache/ms-playwright #? Where Ubuntu runner stores downloaded browsers
          key: ${{ runner.os }}-playwright-${{ hashFiles('pnpm-lock.yaml') }} #? Name of this cache "os-playwright-<hash of the pnpm-lock.yaml>"
          restore-keys: ${{ runner.os }}-playwright- #? Playwright is smart and can use incremental updates with older cache

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: pnpm run test:e2e

      - name: Publish E2E Test Results
        uses: dorny/test-reporter@dc3a92680fcc15842eef52e8c4606ea7ce6bd3f3 # v2
        if: ${{ !cancelled() }}
        with:
          name: 'E2E Test Results'
          path: './reports/playwright/results.xml'
          reporter: 'java-junit'
          fail-on-error: false

      - name: Upload e2e test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./reports/playwright/results.xml
          flags: e2e
          name: e2e-tests
          fail_ci_if_error: false

      - name: Upload test results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: e2e-test-results
          path: |
            reports/playwright/playwright-report/
            reports/playwright/results.xml
          retention-days: 7
