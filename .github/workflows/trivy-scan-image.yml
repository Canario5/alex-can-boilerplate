name: Trivy Security Scan - Image

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - '**/Dockerfile'
      - '**/*.dockerfile'
      - '**/docker/**'
      - '.github/workflows/trivy-scan-image.yml'  # re-run if the workflow itself changes
  push:
    branches: [ main ]
  schedule:
    # Weekly scan (monday 4:00)
    - cron: '0 4 * * 1'

permissions:
  contents: read
  security-events: write

jobs:
  image-scan:
    name: Image (OS + app libraries CVEs)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

    - name: Build Docker image
      run: |
        docker build -t alex-can-boilerplate:${{ github.sha }} .
        docker tag alex-can-boilerplate:${{ github.sha }} alex-can-boilerplate:latest

    - name: Run Trivy image scan
      id: trivy_image
      continue-on-error: true
      uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
      with:
        scan-type: 'image'
        image-ref: 'alex-can-boilerplate:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-image-results.sarif'
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'
        ignore-unfixed: true
        limit-severities-for-sarif: true
        trivyignores: '.trivyignore'

    - name: Fail if Trivy found CRITICAL/HIGH
      if: steps.trivy_image.outcome == 'failure'
      run: |
        echo "Trivy reported CRITICAL/HIGH findings."
        exit 1

    - name: Upload Image results to GitHub Security tab
      if: always()
      uses: github/codeql-action/upload-sarif@df559355d593797519d70b90fc8edd5db049e7a2 # v3
      with:
        sarif_file: 'trivy-image-results.sarif'
