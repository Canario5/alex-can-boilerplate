{
  "name": "alex-can-boilerplate",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "docker:dev": "docker-compose up dev",
    "docker:build": "docker-compose build prod",
    "docker:run": "docker-compose up -d prod",
    "docker:stop": "docker-compose down",
    "trivy:code": "echo 'Scanning source code for secrets and misconfigurations...' && docker-compose run --rm trivy --config trivy.yaml fs .",
    "trivy:image": "echo 'Scanning the Docker image for secrets and misconfigurations...' && docker-compose run --rm trivy --config trivy.yaml image alex-can-boilerplate-prod",
    "trivy:build-scan": "echo 'Building Docker image and scanning image for secrets and misconfigurations...' && npm run docker:build && npm run trivy:image",
    "trivy:vuln": "echo 'Scanning for vulnerabilities...' && docker-compose run --rm trivy --config trivy.yaml fs . --scanners vuln --include-dev-deps",
    "dev": "vite",
    "build": "tsc -b && vite build",
    "preview": "vite preview",
    "lint:check": "biome check .",
    "lint:apply": "biome check --write .",
    "lint:staged": "echo 'Running Biome linter...'; biome check --apply --no-errors-on-unmatched",
    "lint:commit": "commitlint --edit",
    "check:types": "echo 'Checking TypeScript types...'; tsc --noEmit",
    "knip:check": "echo 'Running Knip check...' && knip",
    "knip:apply": "echo 'Running Knip auto-fix...' && knip --fix --format",
    "knip:prod": "echo 'Running Knip production check...' && knip --production",
    "dep-cruise:check": "depcruise --validate .dependency-cruiser.cjs src",
    "validate": "npm run knip:prod && npm run dep-cruise:check && npm run check:types && npm run lint:check",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:unit": "vitest run --project unit",
    "test:unit:watch": "vitest --project unit",
    "test:component": "vitest run --project component",
    "test:component:watch": "vitest --project component",
    "test:integration": "vitest run --project integration",
    "test:integration:watch": "vitest --project integration",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug"
  },
  "dependencies": {
    "react": "19.1.1",
    "react-dom": "19.1.1"
  },
  "devDependencies": {
    "@biomejs/biome": "2.2.0",
    "@commitlint/cli": "19.8.1",
    "@commitlint/config-conventional": "19.8.1",
    "@commitlint/types": "19.8.1",
    "@playwright/test": "1.55.0",
    "@types/react": "19.1.11",
    "@types/react-dom": "19.1.7",
    "@vitejs/plugin-react-swc": "4.0.1",
    "@vitest/browser": "4.0.0-beta.9",
    "dependency-cruiser": "17.0.1",
    "knip": "5.63.0",
    "lefthook": "1.12.3",
    "playwright": "1.55.0",
    "typescript": "5.9.2",
    "vite": "7.1.3",
    "vitest": "4.0.0-beta.9",
    "vitest-browser-react": "2.0.0-beta.3"
  }
}
